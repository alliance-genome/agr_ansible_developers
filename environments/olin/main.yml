---
# IMPORTANT!
# Before using this repository, please create a folder for yourself in the "environments" folder.
# Copy this file to your folder and edit all appropriate values.

# Name used for AWS URL.
# Please replace with your name, e.g. "olin".
# Do not leave this variable as "main".
NET: "olin"

ALLIANCE_RELEASE: 4.1.0

# These values do not need to be altered often.
PLAYBOOK_NAME: "{{ lookup('env','PLAYBOOK_NAME') or 'Olin Test Server' }}"
THREADED: "{{ lookup('env','THREADED') or 'true' }}"
DOWNLOAD_HOST: "download.alliancegenome.org"
FMS_API_URL: "https://fms.alliancegenome.org"
COMPUTE_INSTANCE_TYPE: r5d.8xlarge

# TODO Generating reports is not yet supported.
GENERATE_REPORTS: false
RUN_LOADER_TESTS: false

##################
# Neo4J settings #
##################
# If building Neo4j from "scratch" by running the Loader, please specify the tag to be used for the Neo4j ENV image.
# A list of available tags can be found here:
# https://console.aws.amazon.com/ecr/repositories/private/100225593120/agr_neo4j_env?region=us-east-1
NEO_ENV_IMAGE_FROM_AWS_TAG: build

# Flagging the following variable as true to download a pre-populated Neo4J data image from AWS ECR.
# This assumes that you **do not** wish to run the Loader / QC and instead proceed starting with the Indexer.
DOWNLOAD_NEO4J_DATA_IMAGE_FROM_AWS: false

# If DOWNLOAD_NEO4J_DATA_IMAGE_FROM_AWS is true, a pre-populated Neo4J database will be downloaded from AWS ECR.
# Please specify the tag to use for this Neo4J data image.
# Available tags can be found here:
# https://console.aws.amazon.com/ecr/repositories/private/100225593120/agr_neo4j_data_image?region=us-east-1
NEO4J_DATA_IMAGE_FROM_AWS_TAG: build

###################
# Loader settings #
###################
# Set the following value to true in order to download a pre-compiled image of the loader from AWS.
DOWNLOAD_LOADER_IMAGE_FROM_AWS: True
# If the above is true, please specify the tag for the Loader image.
# Available tags can be found here:
# https://console.aws.amazon.com/ecr/repositories/private/100225593120/agr_loader_run?region=us-east-1
LOADER_IMAGE_FROM_AWS_TAG: build

# If DOWNLOAD_LOADER_IMAGE_FROM_AWS is false, the loader will be built from GitHub.
# Please specify the GitHub branch to use in order to build the loader.
GITHUB_LOADER_BRANCH: "master"

# If running the loader test set (a subset of data), set the following to true.
# TODO This is not yet implemented.
LOADER_TEST_SET: false

###############
# QC settings #
###############
# Set the following value to true in order to download a pre-compiled image of the QC software from AWS.
DOWNLOAD_QC_IMAGE_FROM_AWS: false
# If the above is true, please specify the tag for the QC image.
# Available tags can be found here:
# https://console.aws.amazon.com/ecr/repositories/private/100225593120/agr_qc_run?region=us-east-1
QC_IMAGE_FROM_AWS_TAG: build

# If DOWNLOAD_QC_IMAGE_FROM_AWS is false, the QC software will be built from GitHub.
# Please specify the GitHub branch to use in order to build the QC software.
GITHUB_QC_BRANCH: "master"

#######################
# Infinispan settings #
#######################
# If building Infinispan from "scratch" by running the Cacher, please specify the tag to be used for the ENV image.
# A list of available tags can be found here:
# https://console.aws.amazon.com/ecr/repositories/private/100225593120/agr_infinispan_env?region=us-east-1
INFINISPAN_ENV_IMAGE_FROM_AWS_TAG: build

# Set the following value to true in order to download a pre-populated image of Infinispan from AWS.
DOWNLOAD_INFINISPAN_DATA_IMAGE_FROM_AWS: false

# If DOWNLOAD_INFINISPAN_DATA_IMAGE_FROM_AWS is true, a pre-populated Infinispan image will be downloaded from AWS ECR.
# Please specify the tag to use for this Infinispan data image.
# Available tags can be found here:
# https://console.aws.amazon.com/ecr/repositories/private/100225593120/agr_infinispan_data_image?region=us-east-1
INFINISPAN_DATA_IMAGE_FROM_AWS_TAG: build

######################################
# Indexers, Cacher, and API settings #
######################################
# Set the following value to true in order to download a pre-compiled image of Java Software from AWS.
# This includes the Indexers, Cacher, and API.
DOWNLOAD_JAVA_SOFTWARE_IMAGE_FROM_AWS: false
# If the above is true, please specify the tag for the Java Software image.
# Available tags can be found here:
# https://console.aws.amazon.com/ecr/repositories/private/100225593120/agr_java_software?region=us-east-1
JAVA_SOFTWARE_IMAGE_FROM_AWS_TAG: build

# If DOWNLOAD_JAVA_SOFTWARE_IMAGE_FROM_AWS is false, Java Software will be built from GitHub.
# Please specify the GitHub branch to use in order to build Java Software.
GITHUB_JAVA_SOFTWARE_BRANCH: "olin_human_variant_fix"

# To run specific classes of data with the cacher, please specify the names below.
# Multiple class names can be used if separated by spaces.
# e.g. CACHER_SPECIFIC_FLAGS: "GenePhenotypeCacher DiseaseCacher"
CACHER_SPECIFIC_FLAGS: ""

##############################################
# Elasticsearch, Kibana, & Logstash settings #
##############################################
# IMPORTANT!
# Elasticsearch, Kibana, & Logstash are all loaded when the instance is first launched.
# In order for any of these variables to be updated, the instance will need to be terminated and re-launched.

# The Elasticsearch build environment to pull from AWS ECR.
# Possible tags are here:
# https://console.aws.amazon.com/ecr/repositories/private/100225593120/agr_elasticsearch_env?region=us-east-1
ES_IMAGE_FROM_AWS_TAG: build

# The Kibana build environment to pull from AWS ECR.
# Possible tags are here:
# https://console.aws.amazon.com/ecr/repositories/private/100225593120/agr_kibana_env?region=us-east-1
KIBANA_IMAGE_FROM_AWS_TAG: build

###############
# UI settings #
###############
# Set the following value to true in order to download a pre-compiled image of the QC software from AWS.
DOWNLOAD_UI_IMAGE_FROM_AWS: false
# If the above is true, please specify the tag for the QC image.
# Available tags can be found here:
# https://console.aws.amazon.com/ecr/repositories/private/100225593120/agr_ui_server?region=us-east-1
UI_IMAGE_FROM_AWS_TAG: build

# If DOWNLOAD_QC_IMAGE_FROM_AWS is false, the QC software will be built from GitHub.
# Please specify the GitHub branch to use in order to build the QC software.
GITHUB_UI_BRANCH: "master"

##################
# Nginx settings #
##################
# The Nginx image is pulled from AWS ECR.
# Possible tags are here:
# https://console.aws.amazon.com/ecr/repositories/private/100225593120/agr_nginx?region=us-east-1
NGINX_IMAGE_FROM_AWS_TAG: build
