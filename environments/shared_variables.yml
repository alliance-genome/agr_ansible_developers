---

# Ansible Specific Vars
ansible_ssh_user: core
REGISTRY: 100225593120.dkr.ecr.us-east-1.amazonaws.com
stdout_callback: debug

# Neo4j Variables
NEO_SERVER_NAME: "agr.{{ env }}.neo4j.server"
NEO_DATA_IMAGE: "{{ REGISTRY }}/agr_neo4j_data_image:{{ NEO4J_DATA_IMAGE_FROM_AWS_TAG }}"
NEO_ENV_IMAGE_NAME: "{{ REGISTRY }}/agr_neo4j_env:{{ NEO_ENV_IMAGE_FROM_AWS_TAG }}"

# Loader Variables
LOADER_RUN_NAME: "agr.{{ env }}.loader"
LOADER_TEST_RUN_NAME: "agr.{{ env }}.loader.test"
LOADER_IMAGE_NAME: "{{ REGISTRY }}/agr_loader_run:{{ LOADER_IMAGE_FROM_AWS_TAG }}"
LOADER_TEST_IMAGE_NAME: "{{ REGISTRY }}/agr_loader_test_run: {{ LOADER_IMAGE_FROM_AWS_TAG }}"
REDOWNLOAD_FILES_FROM_FMS: False

# QC Variables
QC_RUN_NAME: "agr.{{ env }}.qc"
QC_IMAGE_NAME: "{{ REGISTRY }}/agr_qc_run:{{ QC_IMAGE_FROM_AWS_TAG }}"

# Infinispan Variables
INFINISPAN_SERVER_NAME: "agr.{{ env }}.infinispan.server"
INFINISPAN_ENV_IMAGE_NAME: "{{ REGISTRY }}/agr_infinispan_env:{{ INFINISPAN_ENV_IMAGE_FROM_AWS_TAG }}"
INFINISPAN_DATA_IMAGE: "{{ REGISTRY }}/agr_infinispan_data_image:{{ INFINISPAN_DATA_IMAGE_FROM_AWS_TAG }}"

# Java Software Variables (used for Indexer, Cacher, and API)
JAVA_SOFTWARE_RUN_IMAGE_NAME: "{{ REGISTRY }}/agr_java_software:{{ JAVA_SOFTWARE_IMAGE_FROM_AWS_TAG }}"

# Indexer Variables
INDEXER_RUN_NAME: "agr.{{ env }}.indexer"
MOD_VARIANT_INDEXER_RUN_NAME: "agr.{{ env }}.mod_variant.indexer"
HUMAN_VARIANT_INDEXER_RUN_NAME: "agr.{{ env }}.human_variant.indexer"


# Curation Variables
CURATION_POSTGRES_SERVER_NAME: "agr.{{ env }}.curation.postgres.server"
CURATION_OPENSEARCH_SERVER_NAME: "agr.{{ env }}.curation.opensearch.server"
CURATION_API_SERVER_NAME: "agr.{{ env }}.curation.api.server"

CURATION_DATA_IMAGE_NAME: agr_curation_data_env
CURATION_DATA_IMAGE:          "{{ REGISTRY }}/{{ CURATION_DATA_IMAGE_NAME }}:{{ CURATION_IMAGE_FROM_AWS_TAG }}"
CURATION_DATA_BUILD_IMAGE:    "{{ REGISTRY }}/{{ CURATION_DATA_IMAGE_NAME }}:{{ CURATION_IMAGE_FROM_AWS_TAG }}"

CURATION_API_IMAGE_NAME: agr_curation
CURATION_API_IMAGE:          "{{ REGISTRY }}/{{ CURATION_API_IMAGE_NAME }}:{{ CURATION_RELEASE_VERSION }}"

OPENSEARCH_IMAGE_NAME: "opensearchproject/opensearch:1.2.4"

# Cacher Variables
CACHER_RUN_NAME: "agr.{{ env }}.cacher"

# API Variables
API_SERVER_NAME: "agr.{{ env }}.api.server"

# Elasticsearch, Kibana, & Logstash
LOG_SERVER_NAME: "agr.{{ env }}.log.server" # Gelf runs outside the docker network
KIBANA_SERVER_NAME: "agr.{{ env }}.kibana.server"
ES_SERVER_NAME: "elasticsearch" # Must be set to elasticsearch in order for Logstash and Kibana to work
GELF_LOG_SERVER_NAME: "localhost" # Gelf runs outside the docker network

ES_ENV_IMAGE_NAME: "{{ REGISTRY }}/agr_elasticsearch_env:{{ ES_IMAGE_FROM_AWS_TAG }}"
KIBANA_IMAGE_NAME: "{{ REGISTRY }}/agr_kibana_env:{{ KIBANA_IMAGE_FROM_AWS_TAG }}"
LOG_IMAGE_NAME: "docker.elastic.co/logstash/logstash:7.7.0"

# UI
UI_RUN_NAME: "agr.{{ env }}.ui.server"
UI_IMAGE_NAME: "{{ REGISTRY }}/agr_ui_server:{{ UI_IMAGE_FROM_AWS_TAG }}"

# Nginx
NGINX_RUN_NAME: "agr.{{ NET }}.nginx.server"
NGINX_IMAGE_NAME: "{{ REGISTRY }}/agr_nginx:{{ NGINX_IMAGE_FROM_AWS_TAG }}"

# Misc Config Options
LOG_SERVER_ADDRESS: "udp://localhost:12201"
NEO_VOLUME_NAME: agr_shared
INFINISPAN_MEMORY: "32g"
INDEXER_MEMORY: "32g"
NEO_PAGE_CACHE: "48g"
NEO_MAX_HEAP: "48g"
CACHER_MEMORY: "80g"
NEO4J_TRANSACTOR_THREADS_VALUE: 7 # Number of processes to spawn when loading data into Neo4j from the Loader.

# Currently unused variables start here, most will be added in the future for developers.
PREPROCESS_RUN_IMAGE_NAME: "{{ REGISTRY }}/{{ PREPROCESS_IMAGE_NAME }}:{{ ALLIANCE_RELEASE }}"
FILE_GENER_TEST_RUN_IMAGE_NAME: "{{ REGISTRY }}/{{ FILEGENER_IMAGE_NAME }}:{{ env }}_filegen"
FILE_GENER_RUN_IMAGE_NAME: "{{ REGISTRY }}/{{ FILEGENER_IMAGE_NAME }}:{{ ALLIANCE_RELEASE }}"
QC_TEST_IMAGE_NAME: "{{ REGISTRY }}/{{ QC_IMAGE_NAME }}:{{ env }}_qc"
API_TEST_IMAGE_NAME: "{{ REGISTRY }}/{{ JAVA_SOFTWARE_IMAGE_NAME }}:{{ env }}_api"
PREPROCESS_IMAGE_NAME: agr_preprocess_run
FILEGENER_IMAGE_NAME: agr_file_generator_run
JBROWSE_IMAGE_NAME: agr_jbrowse_run
APOLLO_IMAGE_NAME: agr_jbrowse_run

# Server Names (currently unused)
JBROWSE_SERVER_NAME: "agr.{{ env }}.jbrowse.server"
APOLLO_SERVER_NAME: "agr.{{ env }}.apollo.server"

# Running Names (currently unused)
API_TEST_NAME: "agr.{{ env }}.api.test"
FILE_GENER_RUN_NAME: "agr.{{ env }}.filegenerator"

# Server Images (currently unused)
JBROWSE_SERVER_IMAGE_NAME: "{{ REGISTRY }}/{{ JBROWSE_IMAGE_NAME }}:{{ ALLIANCE_RELEASE }}"
APOLLO_SERVER_IMAGE_NAME: "{{ REGISTRY }}/{{ APOLLO_IMAGE_NAME }}:{{ ALLIANCE_RELEASE }}"
